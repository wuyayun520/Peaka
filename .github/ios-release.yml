name: Build and Distribute

on:
  push:
    branches:
      - main

jobs:
  build:
    name: build
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v2

      - uses: subosito/flutter-action@v1
        with:
          flutter-version: '3.27.3'
    
      - name: Setup Flutter Environment
        run: |
          flutter clean
          flutter pub get 
      
      # 清除 Xcode 缓存
      - name: Clean Xcode Cache
        run: |
          rm -rf ~/Library/Developer/Xcode/DerivedData
          rm -rf ~/Library/Developer/Xcode/iOS\ DeviceSupport
          rm -rf ~/Library/Developer/Xcode/Archives
          rm -rf ~/Library/Developer/Xcode/Products
          
      # 添加 Xcode 版本选择
      - name: Select Xcode 16.2
        run: sudo xcode-select -s /Applications/Xcode_16.2.app
        
      # 设置 CocoaPods
      # - name: Setup CocoaPods
      #   run: |
      #     cd ios
      #     rm -rf Pods
      #     rm -f Podfile.lock
      #     pod install --repo-update
          
      # 添加详细的环境信息调试步骤
      - name: Print Environment Info
        run: |
          echo "============= Environment Variables ============="
          echo "GITHUB_WORKSPACE: $GITHUB_WORKSPACE"
          FLUTTER_ROOT=$(which flutter | xargs dirname | xargs dirname)
          echo "FLUTTER_ROOT: $FLUTTER_ROOT"
          echo "FLUTTER_APPLICATION_PATH: $GITHUB_WORKSPACE"
          echo "Current Directory: $(pwd)"


      - uses: cedvdb/action-flutter-build-ios@v1
        with:
          build-cmd: |
            flutter build ipa --release --export-options-plist=ios/ExportOptions.plist --no-tree-shake-icons
          certificate-base64: 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


          certificate-password: 111111
          
          provisioning-profile-base64: 

          keychain-password: 111111

      # # 添加检查步骤
      - name: 检查构建文件
        run: |
          echo "检查 build/ios/ipa 目录内容："
          ls -la build/ios/ipa/
          echo "检查 build/ios 目录内容："
          ls -la build/ios/

      - name: Archive IPA
        uses: actions/upload-artifact@v4
        with:
          name: release-ipa
          path: build/ios/ipa


      - name: Upload to App Store using altool
        env:
          IPA_PATH: "build/ios/ipa/peaka.ipa"
          APPLE_ID: "zhengyanqin@sigmahongkong.shop"
          APP_SPECIFIC_PASSWORD: "hled-nmxe-rwol-occe"
        run: |
          xcrun altool --upload-app -f "$IPA_PATH" \
            -t ios \
            -u "$APPLE_ID" \
            -p "$APP_SPECIFIC_PASSWORD" \
            --verbose
